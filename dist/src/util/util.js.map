{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/util/util.ts"],"names":[],"mappings":";;;AAAA,iCAAiC;AAEjC;;GAEG;AACH,SAAgB,aAAa,CAAC,IAAI,EAAE,MAAe;IAC/C,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAEtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;QACtB,+BAA+B;QAC/B,IAAI,KAAK,CAAC,WAAW,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;SAC1H;aAAM,IAAI,KAAK,CAAC,IAAI,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5G;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACrF;QACD,+BAA+B;QAC/B,aAAa,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAA;AACN,CAAC;AAfD,sCAeC","sourcesContent":["import * as ts from \"typescript\";\r\n\r\n/**\r\n * Prints recursively all children nodes of given node as tree.\r\n */\r\nexport function printChildren(node, indent?: string) {\r\n    indent = indent || \"\";\r\n\r\n    node.forEachChild(child => {\r\n        /* tslint:disable:no-console */\r\n        if (child.escapedText) {\r\n            console.log(indent + \"SyntaxKind:\", child.kind + \" \" + ts.SyntaxKind[child.kind], \"| EscapedText:\", child.escapedText);\r\n        } else if (child.text) {\r\n            console.log(indent + \"SyntaxKind:\", child.kind + \" \" + ts.SyntaxKind[child.kind], \"| Text:\", child.text);\r\n        } else {\r\n            console.log(indent + \"SyntaxKind:\", child.kind + \" \" + ts.SyntaxKind[child.kind]);\r\n        }\r\n        /* tslint:disable:no-console */\r\n        printChildren(child, indent + \"  \");\r\n    })\r\n}"]}